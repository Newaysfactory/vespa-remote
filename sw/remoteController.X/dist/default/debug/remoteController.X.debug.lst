

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Feb 23 23:40:21 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	10F222
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	jmp_tab,global,class=ENTRY,space=0,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x1C,4
    14      000                     
    15                           ; Generated 17/08/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC10F222 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49      004                     fsr             equ	4
    50      004                     fsr0            equ	4
    51      000                     indf            equ	0
    52      000                     indf0           equ	0
    53      002                     pc              equ	2
    54      002                     pcl             equ	2
    55      003                     status          equ	3
    56      000                     INDF            equ	0	;# 
    57      001                     TMR0            equ	1	;# 
    58      002                     PCL             equ	2	;# 
    59      003                     STATUS          equ	3	;# 
    60      004                     FSR             equ	4	;# 
    61      005                     OSCCAL          equ	5	;# 
    62      006                     GPIO            equ	6	;# 
    63      007                     ADCON0          equ	7	;# 
    64      008                     ADRES           equ	8	;# 
    65      003                     _STATUSbits     set	3
    66      006                     _GPIO           set	6
    67      006                     _TRISGPIO       set	6
    68      000                     _OPTION         set	0
    69      005                     _OSCCALbits     set	5
    70      007                     _ADCON0bits     set	7
    71      032                     _GP2            set	50
    72      031                     _GP1            set	49
    73      030                     _GP0            set	48
    74      033                     _GP3            set	51
    75                           
    76                           	psect	cinit
    77      001                     start_initialization:	
    78                           ; #config settings
    79                           
    80      001                     __initialization:
    81                           
    82                           ; Clear objects allocated to BANK0
    83      001  0064               	clrf	4	;select bank0
    84      002  0075               	clrf	__pbssBANK0& (0+31)
    85      003  0076               	clrf	(__pbssBANK0+1)& (0+31)
    86      004                     end_of_initialization:	
    87                           ;End of C runtime variable initialization code
    88                           
    89      004                     __end_of__initialization:
    90      004  0064               	clrf	4
    91      005  0B85               	ljmp	_main	;jump to C main() function
    92                           
    93                           	psect	bssBANK0
    94      015                     __pbssBANK0:
    95      015                     debouncePin@candidate_state:
    96      015                     	ds	1
    97      016                     debouncePin@debounced_state:
    98      016                     	ds	1
    99                           
   100                           	psect	cstackCOMMON
   101      000                     __pcstackCOMMON:
   102      000                     ??_init:
   103                           
   104                           	psect	cstackBANK0
   105      009                     __pcstackBANK0:	
   106                           ; 1 bytes @ 0x0
   107                           
   108      009                     ?_init:
   109      009                     ?_debouncePin:	
   110                           ; 1 bytes @ 0x0
   111                           
   112      009                     ?_main:	
   113                           ; 1 bytes @ 0x0
   114                           
   115                           
   116                           ; 1 bytes @ 0x0
   117      009                     	ds	1
   118      00A                     ??_debouncePin:
   119                           
   120                           ; 1 bytes @ 0x1
   121      00A                     	ds	1
   122      00B                     debouncePin@raw_state:
   123                           
   124                           ; 1 bytes @ 0x2
   125      00B                     	ds	1
   126      00C                     ??_main:
   127                           
   128                           ; 1 bytes @ 0x3
   129      00C                     	ds	3
   130      00F                     main@debounce_counter:
   131                           
   132                           ; 1 bytes @ 0x6
   133      00F                     	ds	1
   134      010                     main@cycle:
   135                           
   136                           ; 2 bytes @ 0x7
   137      010                     	ds	2
   138      012                     main@prev_state:
   139                           
   140                           ; 1 bytes @ 0x9
   141      012                     	ds	1
   142      013                     main@state:
   143                           
   144                           ; 1 bytes @ 0xA
   145      013                     	ds	1
   146      014                     main@rising_edges_cnt:
   147                           
   148                           ; 1 bytes @ 0xB
   149      014                     	ds	1
   150                           
   151                           	psect	maintext
   152      185                     __pmaintext:	
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 66 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  cycle           2    7[BANK0 ] unsigned int 
   163 ;;  rising_edges    1   11[BANK0 ] unsigned char 
   164 ;;  state           1   10[BANK0 ] unsigned char 
   165 ;;  prev_state      1    9[BANK0 ] unsigned char 
   166 ;;  debounce_cou    1    6[BANK0 ] unsigned char 
   167 ;;  iii             1    0        unsigned char 
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1   39[None  ] void 
   170 ;; Registers used:
   171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+3, pclath, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : B00/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMMON   BANK0
   177 ;;      Params:         0       0
   178 ;;      Locals:         0       6
   179 ;;      Temps:          0       3
   180 ;;      Totals:         0       9
   181 ;;Total ram usage:        9 bytes
   182 ;; Hardware stack levels required when called: 1
   183 ;; This function calls:
   184 ;;		_debouncePin
   185 ;;		_init
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191      185                     _main:	
   192                           ;psect for function _main
   193                           
   194      185                     l616:	
   195                           ;incstack = 0
   196                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1+btemp+3+pclath+cstack]
   197                           
   198                           
   199                           ;main.c: 67:     unsigned char rising_edges_cnt = 0;
   200      185  0074               	clrf	main@rising_edges_cnt
   201                           
   202                           ;main.c: 69:     unsigned int cycle = 0;
   203      186  0070               	clrf	main@cycle
   204      187  0071               	clrf	main@cycle+1
   205                           
   206                           ;main.c: 70:     unsigned char debounce_counter = 0;
   207      188  006F               	clrf	main@debounce_counter
   208                           
   209                           ;main.c: 71:     unsigned char prev_state = 0;
   210      189  0072               	clrf	main@prev_state
   211                           
   212                           ;main.c: 72:     unsigned char state = 0;
   213      18A  0073               	clrf	main@state
   214      18B                     l618:
   215                           
   216                           ;main.c: 74:     if((STATUSbits.GPWUF == 1) && (STATUSbits.nTO == 1) && (STATUSbits.nPD 
      +                          == 0)){
   217      18B  07E3               	btfss	3,7	;volatile
   218      18C  0B8E               	goto	u141
   219      18D  0B8F               	goto	u140
   220      18E                     u141:
   221      18E  0BED               	goto	l658
   222      18F                     u140:
   223      18F                     l620:
   224      18F  0783               	btfss	3,4	;volatile
   225      190  0B92               	goto	u151
   226      191  0B93               	goto	u150
   227      192                     u151:
   228      192  0BED               	goto	l658
   229      193                     u150:
   230      193                     l622:
   231      193  0663               	btfsc	3,3	;volatile
   232      194  0B96               	goto	u161
   233      195  0B97               	goto	u160
   234      196                     u161:
   235      196  0BED               	goto	l658
   236      197                     u160:
   237      197  0BBF               	goto	l642
   238      198                     l626:
   239                           
   240                           ;main.c: 80:             state = debouncePin(GP3);
   241      198  0C00               	movlw	0
   242      199  0666               	btfsc	6,3	;volatile
   243      19A  0C01               	movlw	1
   244      19B  0907               	fcall	entry__debouncePin
   245      19C  0209               	movf	?_debouncePin,w
   246      19D  0033               	movwf	main@state
   247      19E                     l628:
   248                           
   249                           ;main.c: 83:             if (prev_state == 0 && state == 1) {
   250      19E  0212               	movf	main@prev_state,w
   251      19F  0743               	btfss	3,2
   252      1A0  0BA2               	goto	u171
   253      1A1  0BA3               	goto	u170
   254      1A2                     u171:
   255      1A2  0BAC               	goto	l636
   256      1A3                     u170:
   257      1A3                     l630:
   258      1A3  00D3               	decf	main@state,w
   259      1A4  0743               	btfss	3,2
   260      1A5  0BA7               	goto	u181
   261      1A6  0BA8               	goto	u180
   262      1A7                     u181:
   263      1A7  0BAC               	goto	l636
   264      1A8                     u180:
   265      1A8                     l632:
   266                           
   267                           ;main.c: 84:                 rising_edges_cnt++;
   268      1A8  0C01               	movlw	1
   269      1A9  01F4               	addwf	main@rising_edges_cnt,f
   270      1AA                     l634:
   271                           
   272                           ;main.c: 85:                 cycle = 0;
   273      1AA  0070               	clrf	main@cycle
   274      1AB  0071               	clrf	main@cycle+1
   275      1AC                     l636:
   276                           
   277                           ;main.c: 88:             cycle++;
   278      1AC  0C01               	movlw	1
   279      1AD  003C               	movwf	btemp
   280      1AE  007D               	clrf	btemp+1
   281      1AF  021C               	movf	wtemp0,w
   282      1B0  01F0               	addwf	main@cycle,f
   283      1B1  0603               	skipnc
   284      1B2  02B1               	incf	main@cycle+1,f
   285      1B3  021D               	movf	wtemp0+1,w
   286      1B4  01F1               	addwf	main@cycle+1,f
   287      1B5                     l638:
   288                           
   289                           ;main.c: 89:             prev_state = state;
   290      1B5  0213               	movf	main@state,w
   291      1B6  0032               	movwf	main@prev_state
   292      1B7                     l640:
   293                           
   294                           ;main.c: 90:             _delay((unsigned long)((5)*(4000000/4000.0)));
   295      1B7  0C07               	movlw	7
   296      1B8  002D               	movwf	??_main+1
   297      1B9  0C7D               	movlw	125
   298      1BA  002C               	movwf	??_main
   299      1BB                     u237:
   300      1BB  02EC               	decfsz	??_main,f
   301      1BC  0BBB               	goto	u237
   302      1BD  02ED               	decfsz	??_main+1,f
   303      1BE  0BBB               	goto	u237
   304      1BF                     l642:
   305                           
   306                           ;main.c: 78:         while (cycle < 500){
   307      1BF  0C01               	movlw	1
   308      1C0  0091               	subwf	main@cycle+1,w
   309      1C1  0CF4               	movlw	244
   310      1C2  0643               	skipnz
   311      1C3  0090               	subwf	main@cycle,w
   312      1C4  0703               	skipc
   313      1C5  0BC7               	goto	u191
   314      1C6  0BC8               	goto	u190
   315      1C7                     u191:
   316      1C7  0B98               	goto	l626
   317      1C8                     u190:
   318      1C8                     l644:
   319                           
   320                           ;main.c: 93:         if (rising_edges_cnt == 1){
   321      1C8  00D4               	decf	main@rising_edges_cnt,w
   322      1C9  0743               	btfss	3,2
   323      1CA  0BCC               	goto	u201
   324      1CB  0BCD               	goto	u200
   325      1CC                     u201:
   326      1CC  0BCF               	goto	l648
   327      1CD                     u200:
   328      1CD                     l646:
   329                           
   330                           ;main.c: 94:             GP0 = 1;
   331      1CD  0506               	bsf	6,0	;volatile
   332                           
   333                           ;main.c: 95:         } else if (rising_edges_cnt == 2){
   334      1CE  0BDF               	goto	l656
   335      1CF                     l648:
   336      1CF  0C02               	movlw	2
   337      1D0  0194               	xorwf	main@rising_edges_cnt,w
   338      1D1  0743               	btfss	3,2
   339      1D2  0BD4               	goto	u211
   340      1D3  0BD5               	goto	u210
   341      1D4                     u211:
   342      1D4  0BD7               	goto	l652
   343      1D5                     u210:
   344      1D5                     l650:
   345                           
   346                           ;main.c: 96:             GP1 = 1;
   347      1D5  0526               	bsf	6,1	;volatile
   348                           
   349                           ;main.c: 97:         } else if (rising_edges_cnt == 3){
   350      1D6  0BDF               	goto	l656
   351      1D7                     l652:
   352      1D7  0C03               	movlw	3
   353      1D8  0194               	xorwf	main@rising_edges_cnt,w
   354      1D9  0743               	btfss	3,2
   355      1DA  0BDC               	goto	u221
   356      1DB  0BDD               	goto	u220
   357      1DC                     u221:
   358      1DC  0BDF               	goto	l48
   359      1DD                     u220:
   360      1DD                     l654:
   361                           
   362                           ;main.c: 98:             GP2 = 1;
   363      1DD  0546               	bsf	6,2	;volatile
   364                           
   365                           ;main.c: 99:         }else {
   366      1DE  0BDF               	goto	l656
   367      1DF                     l48:
   368      1DF                     l656:
   369                           
   370                           ;main.c: 103:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   371      1DF  0C06               	movlw	6
   372      1E0  002E               	movwf	??_main+2
   373      1E1  0C13               	movlw	19
   374      1E2  002D               	movwf	??_main+1
   375      1E3  0CAD               	movlw	173
   376      1E4  002C               	movwf	??_main
   377      1E5                     u247:
   378      1E5  02EC               	decfsz	??_main,f
   379      1E6  0BE5               	goto	u247
   380      1E7  02ED               	decfsz	??_main+1,f
   381      1E8  0BE5               	goto	u247
   382      1E9  02EE               	decfsz	??_main+2,f
   383      1EA  0BE5               	goto	u247
   384      1EB  0BEC               	nop2
   385                           
   386                           ;main.c: 114:     }
   387      1EC  0BFA               	goto	l668
   388      1ED                     l658:
   389                           
   390                           ;main.c: 117:         init();
   391      1ED  0906               	fcall	entry__init
   392      1EE                     l660:
   393                           
   394                           ;main.c: 119:         GP0 = 1;
   395      1EE  0506               	bsf	6,0	;volatile
   396      1EF                     l662:
   397                           
   398                           ;main.c: 120:         GP1 = 1;
   399      1EF  0526               	bsf	6,1	;volatile
   400      1F0                     l664:
   401                           
   402                           ;main.c: 121:         GP2 = 1;
   403      1F0  0546               	bsf	6,2	;volatile
   404      1F1                     l666:
   405                           
   406                           ;main.c: 122:         _delay((unsigned long)((10)*(4000000/4000.0)));
   407      1F1  0C0D               	movlw	13
   408      1F2  002D               	movwf	??_main+1
   409      1F3  0CFB               	movlw	251
   410      1F4  002C               	movwf	??_main
   411      1F5                     u257:
   412      1F5  02EC               	decfsz	??_main,f
   413      1F6  0BF5               	goto	u257
   414      1F7  02ED               	decfsz	??_main+1,f
   415      1F8  0BF5               	goto	u257
   416      1F9  0BFA               	nop2
   417      1FA                     l668:
   418                           
   419                           ;main.c: 126:     GP0 = 0;
   420      1FA  0406               	bcf	6,0	;volatile
   421      1FB                     l670:
   422                           
   423                           ;main.c: 127:     GP1 = 0;
   424      1FB  0426               	bcf	6,1	;volatile
   425      1FC                     l672:
   426                           
   427                           ;main.c: 128:     GP2 = 0;
   428      1FC  0446               	bcf	6,2	;volatile
   429      1FD  0003               	sleep	;# 
   430      1FE                     l52:
   431      1FE  0A00               	ljmp	start
   432      1FF                     __end_of_main:
   433                           
   434                           	psect	text1
   435      163                     __ptext1:	
   436 ;; *************** function _init *****************
   437 ;; Defined at:
   438 ;;		line 33 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1   24[None  ] void 
   445 ;; Registers used:
   446 ;;		wreg, fsr0l, fsr0h, status,2
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0
   452 ;;      Params:         0       0
   453 ;;      Locals:         0       0
   454 ;;      Temps:          0       0
   455 ;;      Totals:         0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465      163                     _init:	
   466                           ;psect for function _init
   467                           
   468      163                     l594:
   469                           
   470                           ;main.c: 35:     ADCON0bits.ANS0 = 0;
   471      163  04C7               	bcf	7,6	;volatile
   472                           
   473                           ;main.c: 36:     ADCON0bits.ANS1 = 0;
   474      164  04E7               	bcf	7,7	;volatile
   475                           
   476                           ;main.c: 37:     OSCCALbits.FOSC4 = 0;
   477      165  0405               	bcf	5,0	;volatile
   478      166                     l596:
   479                           
   480                           ;main.c: 42:     OPTION = 0b01011111;
   481      166  0C5F               	movlw	95
   482      167  0002               	option
   483      168                     l598:
   484                           
   485                           ;main.c: 45:     TRISGPIO = 0b11111000;
   486      168  0CF8               	movlw	248
   487      169  0006               	tris	6
   488      16A                     l600:
   489                           
   490                           ;main.c: 46:     GPIO = 0b00000000;
   491      16A  0066               	clrf	6	;volatile
   492      16B                     l25:
   493      16B  0800               	retlw	0
   494      16C                     __end_of_init:
   495                           
   496                           	psect	jmp_tab
   497      006                     __pjmp_tab:	
   498                           ;incstack = 0
   499                           ; Regs used in _init: [wreg-fsr0h+status,2]
   500                           
   501      006                     entry__init:
   502      006  0B63               	ljmp	_init
   503      007                     entry__debouncePin:	
   504                           ;incstack = 0
   505                           ; Regs used in _debouncePin: [wreg-fsr0h+status,2+status,0+btemp+3]
   506                           
   507      007  0B6C               	ljmp	_debouncePin
   508                           
   509                           	psect	text2
   510      16C                     __ptext2:	
   511 ;; *************** function _debouncePin *****************
   512 ;; Defined at:
   513 ;;		line 49 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  raw_state       1    wreg     unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  raw_state       1    2[BANK0 ] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    0[BANK0 ] unsigned char 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+3
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0
   527 ;;      Params:         0       1
   528 ;;      Locals:         0       1
   529 ;;      Temps:          0       1
   530 ;;      Totals:         0       3
   531 ;;Total ram usage:        3 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540      16C                     _debouncePin:	
   541                           ;psect for function _debouncePin
   542                           
   543                           
   544                           ;debouncePin@raw_state stored from wreg
   545      16C  002B               	movwf	debouncePin@raw_state
   546      16D                     l602:
   547                           
   548                           ;main.c: 52:     static unsigned char debounced_state = 0;;main.c: 53:     static unsign
      +                          ed char candidate_state = 0;;main.c: 55:     candidate_state = candidate_state << 1 | ra
      +                          w_state;
   549      16D  020B               	movf	debouncePin@raw_state,w
   550      16E  003F               	movwf	btemp+3
   551      16F  0215               	movf	debouncePin@candidate_state,w
   552      170  002A               	movwf	??_debouncePin
   553      171  01CA               	addwf	??_debouncePin,w
   554      172  011F               	iorwf	btemp+3,w
   555      173  0035               	movwf	debouncePin@candidate_state
   556      174                     l604:
   557                           
   558                           ;main.c: 56:     if (candidate_state == 0xff){
   559      174  0295               	incf	debouncePin@candidate_state,w
   560      175  0743               	btfss	3,2
   561      176  0B78               	goto	u121
   562      177  0B79               	goto	u120
   563      178                     u121:
   564      178  0B7C               	goto	l608
   565      179                     u120:
   566      179                     l606:
   567                           
   568                           ;main.c: 57:         debounced_state = 1;
   569      179  0C01               	movlw	1
   570      17A  0036               	movwf	debouncePin@debounced_state
   571                           
   572                           ;main.c: 58:     }
   573      17B  0B82               	goto	l612
   574      17C                     l608:
   575      17C  0215               	movf	debouncePin@candidate_state,w
   576      17D  0743               	btfss	3,2
   577      17E  0B80               	goto	u131
   578      17F  0B81               	goto	u130
   579      180                     u131:
   580      180  0B82               	goto	l612
   581      181                     u130:
   582      181                     l610:
   583                           
   584                           ;main.c: 60:         debounced_state = 0;
   585      181  0076               	clrf	debouncePin@debounced_state
   586      182                     l612:
   587                           
   588                           ;main.c: 62:     return debounced_state;
   589      182  0216               	movf	debouncePin@debounced_state,w
   590      183  0029               	movwf	?_debouncePin
   591      184                     l35:
   592      184  0800               	retlw	0
   593      185                     __end_of_debouncePin:
   594      000                     ___latbits      equ	0
   595      01C                     btemp           set	28	;btemp
   596      01C                     wtemp0          set	28
   597      01E                     wtemp1          set	30
   598      01C                     ttemp0          set	28
   599      01C                     ltemp0          set	28
   600                           
   601                           	psect	config
   602                           
   603                           ;Config register CONFIG @ 0xFFF
   604                           ;	Internal Oscillator Frequency Select bit
   605                           ;	IOSCFS = 4MHZ, 4 MHz
   606                           ;	Master Clear Pull-up Enable bit
   607                           ;	MCPU = OFF, Pull-up disabled
   608                           ;	Watchdog Timer Enable bit
   609                           ;	WDTE = OFF, WDT disabled
   610                           ;	Code protection bit
   611                           ;	CP = OFF, Code protection off
   612                           ;	GP3/MCLR Pin Function Select bit
   613                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   614      FFF                     	org	4095
   615      FFF  0FEA               	dw	4074

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            21     12      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_debouncePin

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     194
                                              3 BANK0      9     9      0
                        _debouncePin
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debouncePin                                          3     2      1      29
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debouncePin
   _init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            21      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               21     12      14     66.7%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Feb 23 23:40:21 2025

                        l25 016B                          l35 0184                          l52 01FE  
                        l48 01DF                          fsr 0004                         l600 016A  
                       l610 0181                         l602 016D                         l612 0182  
                       l604 0174                         l620 018F                         l606 0179  
                       l630 01A3                         l622 0193                         l608 017C  
                       l640 01B7                         l632 01A8                         l616 0185  
                       l650 01D5                         l634 01AA                         l626 0198  
                       l642 01BF                         l618 018B                         l660 01EE  
                       l652 01D7                         l644 01C8                         l636 01AC  
                       l628 019E                         l670 01FB                         l662 01EF  
                       l654 01DD                         l646 01CD                         l638 01B5  
                       l672 01FC                         l664 01F0                         l656 01DF  
                       l648 01CF                         l594 0163                         l666 01F1  
                       l658 01ED                         l596 0166                         l668 01FA  
                       l598 0168                         _GP0 0030                         _GP1 0031  
                       _GP2 0032                         _GP3 0033                         u120 0179  
                       u200 01CD                         u121 0178                         u201 01CC  
                       u130 0181                         u210 01D5                         u131 0180  
                       u211 01D4                         u220 01DD                         u140 018F  
                       u221 01DC                         u141 018E                         u150 0193  
                       u151 0192                         u160 0197                         u161 0196  
                       u170 01A3                         u171 01A2                         u180 01A8  
                       u237 01BB                         u181 01A7                         u190 01C8  
                       u247 01E5                         u191 01C7                         u257 01F5  
                      _GPIO 0006                        _main 0185                        _init 0163  
                      btemp 001C        debouncePin@raw_state 000B                        start 0000  
                     ?_main 0009                       ?_init 0009                       ltemp0 001C  
                     ttemp0 001C                       status 0003                       wtemp0 001C  
                     wtemp1 001E             __initialization 0001                __end_of_main 01FF  
              __end_of_init 016C                      ??_main 000C                      ??_init 0000  
                    _OPTION 0000           entry__debouncePin 0007     __end_of__initialization 0004  
debouncePin@debounced_state 0016              __pcstackCOMMON 0000                  __pbssBANK0 0015  
                __pmaintext 0185                     __ptext1 0163                     __ptext2 016C  
      end_of_initialization 0004               ??_debouncePin 000A              main@prev_state 0012  
       __end_of_debouncePin 0185         start_initialization 0001        main@debounce_counter 000F  
                entry__init 0006  debouncePin@candidate_state 0015                   ___latbits 0000  
             __pcstackBANK0 0009                 _debouncePin 016C                   __pjmp_tab 0006  
                  _TRISGPIO 0006                  _ADCON0bits 0007                   main@cycle 0010  
                 main@state 0013        main@rising_edges_cnt 0014                ?_debouncePin 0009  
                _OSCCALbits 0005                  _STATUSbits 0003  
